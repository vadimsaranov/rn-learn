platform :ios do
  desc "Fetch certificates and provisioning profiles"
  lane :certificates do
    match(app_identifier: "com.app.rnlearn", type: "development", readonly: true)
    match(app_identifier: "com.app.rnlearn", type: "appstore", readonly: true)
  end

  desc "Build the iOS application."
  private_lane :build do
    certificates
    increment_build_number(xcodeproj: "./ios/rnlearn.xcodeproj")
    gym(scheme: "rnlearn", project: "./ios/rnlearn.xcodeproj")
  end

  desc "Ship to Testflight."
  lane :beta do
    build
    pilot
    commit_version_bump(message: "Bump build", xcodeproj: "./ios/name.xcodeproj")
    push_to_git_remote
    slack(message: "Successfully uploaded to Testflight!")
  end
end

platform :android do
  desc "Build the Android application."
  private_lane :build do
    gradle(task: "clean", project_dir: "android/")
    gradle(task: "assemble", build_type: "Release", project_dir: "android/")
  end
  desc "Upload to playstore."
  lane :beta do
    build
    supply(track: "beta", track_promote_to: "beta")
    git_commit(path: ["./android/gradle.properties"], message: "Bump versionCode")
    gradle(task: "incrementVersionCode", project_dir: "android/")
    push_to_git_remote
    slack(message: "Successfully uploaded to Playstore!")
  end
end
